import javax.microedition.midlet.MIDlet;
import javax.microedition.midlet.MIDletStateChangeException;
import javax.microedition.lcdui.*;
import javax.microedition.m3g.*;

import java.lang.IllegalArgumentException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ByteArrayOutputStream;
import java.util.Timer;
import java.util.TimerTask;

public class TGame2 extends MIDlet  implements CommandListener {
	int TANK_MESH_ID = 0Xea0ef881;
	private Display myDisplay = null;
	Graphics3D myGraphics3D = Graphics3D.getInstance();
	World myWorld = null;
	
	Object3D mySceneObj = null;
	Object3D myTankObj = null;
	
	Camera myCamera = null;
	TGameCanvas myCanvas = null;
	
	Group myTankGroup = null;
	Mesh myTankMesh = null;
	
	public TGame2(){
		super();	
		System.out.println("Constructor");
		
	
		myDisplay = Display.getDisplay(this);
		myCanvas = new TGameCanvas(this);
		System.out.println("Constructor End");
	}
	
	
	/* CommandListener abstract methods override
	*/
	public void commandAction(Command c,Displayable d){};
	public void keyEvent(int Type,int KeyCode){
		System.out.println("KeyEvent");
		System.out.println("Key:"+KeyCode);
		switch(myCanvas.getGameAction(KeyCode)){
			case Canvas.LEFT:
				System.out.println("Left");
				//myCamera.translate(0,1,0);
				myCamera.preRotate(-5,0,0,1);
				myTankGroup.preRotate(5,1,0,0);
				
			break;
	
			case Canvas.RIGHT:
				System.out.println("Right");
				//myCamera.translate(0,-1,0);
				myCamera.preRotate(5,0,0,1);
	
			break;
			case Canvas.UP:
				System.out.println("UP");
				myCamera.preRotate(-5,0,1,0);
			break;
			
			case Canvas.DOWN:
				System.out.println("DOWN");
				myCamera.preRotate(5,0,1,0);		
				
			break;
		};
	myCanvas.repaint();
	System.out.println("KeyEvent End");
	}
	
	
	/*Midlet abstract methods override
	*/
	public void destroyApp(boolean unconditional)throws MIDletStateChangeException{
	}
	public void pauseApp(){
	}
	public void startApp(){
		System.out.println("startApp");
		myDisplay.setCurrent(myCanvas);
		try {
			//LOAD SCENE FIRST
			//SET CAMERA SECOND	
			//ADD CHILDREN LAST
			
			//mySceneObj = Loader.load("/tankWithScene.m3g")[0];
			mySceneObj = Loader.load("/scene.m3g")[0];
			myWorld = (World)mySceneObj;

			myCamera= myWorld.getActiveCamera(); 
			
			myWorld.addChild(myTankGroup);	
	
			myTankObj   = Loader.load("/tank.m3g")[0];
			myTankGroup = (Group)myTankObj;
			
			//Test
				myCamera.
			//
		}catch(Exception e) {
			e.printStackTrace();
		}	
		
		myCanvas.repaint();
		
		DisplayWorldObjects();
	System.out.println("StartApp.myTankObj: "+myTankObj);
	System.out.println("startApp.myTankGroup:  "+myTankGroup);
	System.out.println("startApp end");
	}
	
	
	
	
	//Midlet Paint Override
	public void paint(Graphics g){
		System.out.println("paint");
		//UpDatePositions();
		g.setColor(0x00);
		g.fillRect(0,0,myCanvas.getWidth(),myCanvas.getHeight());
		
		System.out.println("paint -> ScreenCleaned");
		int Validity = myWorld.animate(1);
		System.out.println("paint -> Animated, Validity: "+Validity);
		myGraphics3D.bindTarget(g);
		System.out.println("paint -> Binded");
		myGraphics3D.setViewport(0,0,myCanvas.getWidth(),myCanvas.getHeight());
		System.out.println("paint -> Viewport Seted");
		myGraphics3D.render(myWorld);
		System.out.println("paint -> Rendered");
		myGraphics3D.releaseTarget();
		System.out.println("paint end");
		
	};

	public void DisplayWorldObjects(){
		System.out.println("DisplayWorldObjects");
		int numReferences = mySceneObj.getReferences(null);
		System.out.println("DisplayWorldObjects.number of refrences from myWorld:"+numReferences);
		if (numReferences > 0){
			 Object3D objects[] = new Object3D[numReferences];
			 mySceneObj.getReferences(objects);
			 for (int i=0;i<numReferences;i++){
				 System.out.println("Obj:"+i+"objects[i]:"+objects[i]);
			 }	 
			
		}
		System.out.println("DisplayWorldObjects end");
	}
	
	
	
	
	public void UpDatePositions(){
		//PosiotionTank = (Group)myWorld.find(TANK_POSITION_ID);
		/*	Transform rotY;
			rotY[0]={0,0,0,0};
			rotY[1]={0,0,0}
			rotY[2]={0,0,0}
			rotY[3]={0,0.5f,0}
			//PosiotionTank.rotateX(0.50f);
			*/
			
	}
	
	
	
}

