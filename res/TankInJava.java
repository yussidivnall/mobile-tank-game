import java.io.IOException;
import javax.microedition.lcdui.Image;
import javax.microedition.m3g.*;
public final class TankInJava {
	public static World getRoot(Canvas3D aCanvas) throws IOException{
		//Camera Camera.001
		Camera BL2 = new Camera();
		float[] BL2_matrix = {
			0.499999552965f,-0.224143564701f,0.836516618729f,6.68937063217f,
			0.866025686264f,0.12940916419f,-0.482962548733f,-3.51236796379f,
			3.64578944811e-008f,0.965925931931f,0.258818596601f,2.67548084259f,
			0.0f,0.0f,0.0f,1.0f
		};
		
		Transform BL2_transform = new Transform();
		BL2_transform.set(BL2_matrix);
		BL2.setTransform(BL2_transform);
		
		BL2.setPerspective(60.000000f,  //Field of View
				(float)aCanvas.getWidth()/(float)aCanvas.getHeight(),
				0.10000000149f, //Near Clipping Plane
				100.0f); //Far Clipping Plane
		//Background:
		Background BL3 = new Background();
		BL3.setColor(0x000E3866);
		
		//Light: Lamp
		Light BL4 = new Light();
		BL4.setMode(129);
		BL4.setColor(0x00FFFFFF);
		BL4.setIntensity(2.831169f);
		BL4.setTranslation(1.06786477566f, -2.07748055458f, 4.3376159668f);
		
		// VertexArray 
		short[] BL5_array = {
			32539,9109,1360,32539,9109,-10243,23656,8996,-10243,-2764,-9109,1360,
			1664,-9053,-7547,6117,-8996,-10243,32539,9109,-10243,32596,4668,-10243,
			23713,4554,-10243,23656,8996,-10243,1437,8712,-7547,1494,4271,-7547,
			-2991,8656,1360,-2991,8656,1360,-2764,-9109,1360,32766,-8656,1360,
			32539,9109,1360,32766,-8656,1360,32766,-8656,-10243,32709,-4214,-10243,
			32653,226,-10243,32596,4668,-10243,32539,9109,1360,32653,226,-10243,
			32539,9109,1360,32766,-8656,1360,1550,-170,-7547,1607,-4611,-7547,
			-2764,-9109,1360,1550,-170,-7547,-2764,-9109,1360,-2991,8656,1360,
			32766,-8656,-10243,23883,-8769,-10243,23826,-4328,-10243,32709,-4214,-10243,
			1664,-9053,-7547,1607,-4611,-7547,6061,-4554,-10243,6117,-8996,-10243,
			1437,8712,-7547,5891,8769,-10243,5947,4328,-10243,1494,4271,-7547,
			15000,-8882,-10243,23883,-8769,-10243,32766,-8656,1360,15000,-8882,-10243,
			32766,-8656,1360,-2764,-9109,1360,14773,8882,-10243,5891,8769,-10243,
			-2991,8656,1360,14773,8882,-10243,-2991,8656,1360,32539,9109,1360,
			5891,8769,-10243,1437,8712,-7547,-2991,8656,1360,23883,-8769,-10243,
			32766,-8656,-10243,32766,-8656,1360,14773,8882,-10243,14830,4441,-10243,
			5947,4328,-10243,5891,8769,-10243,14887,0,-10243,6004,-113,-10243,
			5947,4328,-10243,14830,4441,-10243,1550,-170,-7547,1494,4271,-7547,
			5947,4328,-10243,6004,-113,-10243,1550,-170,-7547,6004,-113,-10243,
			6061,-4554,-10243,1607,-4611,-7547,14887,0,-10243,14944,-4441,-10243,
			6061,-4554,-10243,6004,-113,-10243,15000,-8882,-10243,6117,-8996,-10243,
			6061,-4554,-10243,14944,-4441,-10243,15000,-8882,-10243,14944,-4441,-10243,
			23826,-4328,-10243,23883,-8769,-10243,14887,0,-10243,23770,113,-10243,
			23826,-4328,-10243,14944,-4441,-10243,32653,226,-10243,32709,-4214,-10243,
			23826,-4328,-10243,23770,113,-10243,1607,-4611,-7547,1664,-9053,-7547,
			-2764,-9109,1360,32596,4668,-10243,32539,9109,-10243,32539,9109,1360,
			32709,-4214,-10243,32653,226,-10243,32766,-8656,1360,1494,4271,-7547,
			1550,-170,-7547,-2991,8656,1360,32653,226,-10243,23770,113,-10243,
			23713,4554,-10243,32596,4668,-10243,14887,0,-10243,14830,4441,-10243,
			23713,4554,-10243,23770,113,-10243,14773,8882,-10243,23656,8996,-10243,
			23713,4554,-10243,14830,4441,-10243,6117,-8996,-10243,15000,-8882,-10243,
			-2764,-9109,1360,23656,8996,-10243,14773,8882,-10243,32539,9109,1360,
			-32761,763,7882,5764,1255,7882,5759,1645,5424,-32766,1153,5424,
			-32766,1153,5424,5759,1645,5424,5787,-572,4294,-32738,-1064,4294,
			-32738,-1064,4294,5787,-572,4294,5809,-2332,6054,-32715,-2824,6054,
			-32715,-2824,6054,5809,-2332,6054,5795,-1202,8272,-32730,-1694,8272,
			-32730,-1694,8272,5795,-1202,8272,5764,1255,7882,-32761,763,7882,
			5891,8769,1360,5891,8769,10243,14773,8882,10243,23656,8996,1360,
			15000,-8882,10243,6117,-8996,10243,6117,-8996,1360,23883,-8769,1360,
			14773,8882,10243,15000,-8882,10243,23883,-8769,1360,23656,8996,1360,
			23656,8996,1360,23883,-8769,1360,6117,-8996,1360,5891,8769,1360,
			5891,8769,1360,6117,-8996,1360,6117,-8996,10243,5891,8769,10243,
			5891,8769,10243,6117,-8996,10243,15000,-8882,10243,14773,8882,10243
		};
		
		VertexArray BL5 = new VertexArray(BL5_array.length/3,3,2);
		BL5.set(0,BL5_array.length/3,BL5_array);
		
		// VertexArray 
		byte[] BL6_array = {
			-1,126,0,-1,126,0,-1,126,0,1,-126,0,
			1,-126,0,1,-126,0,0,0,-127,0,0,-127,
			0,0,-127,0,0,-127,-113,-1,-56,-113,-1,-56,
			-113,-1,-56,0,0,127,0,0,127,0,0,127,
			0,0,127,126,1,0,126,1,0,126,1,0,
			126,1,0,126,1,0,126,1,0,126,1,0,
			126,1,0,126,1,0,-113,-1,-56,-113,-1,-56,
			-113,-1,-56,-113,-1,-56,-113,-1,-56,-113,-1,-56,
			0,0,-127,0,0,-127,0,0,-127,0,0,-127,
			-65,0,-108,-65,0,-108,-65,0,-108,-65,0,-108,
			-65,0,-108,-65,0,-108,-65,0,-108,-65,0,-108,
			1,-126,0,1,-126,0,1,-126,0,1,-126,0,
			1,-126,0,1,-126,0,-1,126,0,-1,126,0,
			-1,126,0,-1,126,0,-1,126,0,-1,126,0,
			-1,126,0,-1,126,0,-1,126,0,1,-126,0,
			1,-126,0,1,-126,0,0,0,-127,0,0,-127,
			0,0,-127,0,0,-127,0,0,-127,0,0,-127,
			0,0,-127,0,0,-127,-65,0,-108,-65,0,-108,
			-65,0,-108,-65,0,-108,-65,0,-108,-65,0,-108,
			-65,0,-108,-65,0,-108,0,0,-127,0,0,-127,
			0,0,-127,0,0,-127,0,0,-127,0,0,-127,
			0,0,-127,0,0,-127,0,0,-127,0,0,-127,
			0,0,-127,0,0,-127,0,0,-127,0,0,-127,
			0,0,-127,0,0,-127,0,0,-127,0,0,-127,
			0,0,-127,0,0,-127,-113,-1,-56,-113,-1,-56,
			-113,-1,-56,126,1,0,126,1,0,126,1,0,
			126,1,0,126,1,0,126,1,0,-113,-1,-56,
			-113,-1,-56,-113,-1,-56,0,0,-127,0,0,-127,
			0,0,-127,0,0,-127,0,0,-127,0,0,-127,
			0,0,-127,0,0,-127,0,0,-127,0,0,-127,
			0,0,-127,0,0,-127,1,-126,0,1,-126,0,
			1,-126,0,-1,126,0,-1,126,0,-1,126,0,
			-1,125,19,-1,125,19,-1,125,19,-1,125,19,
			0,57,-113,0,57,-113,0,57,-113,0,57,-113,
			1,-89,-89,1,-89,-89,1,-89,-89,1,-89,-89,
			1,-113,57,1,-113,57,1,-113,57,1,-113,57,
			0,19,125,0,19,125,0,19,125,0,19,125,
			-1,126,0,-1,126,0,-1,126,0,-1,126,0,
			1,-126,0,1,-126,0,1,-126,0,1,-126,0,
			89,1,89,89,1,89,89,1,89,89,1,89,
			0,0,-127,0,0,-127,0,0,-127,0,0,-127,
			-126,-1,0,-126,-1,0,-126,-1,0,-126,-1,0,
			0,0,127,0,0,127,0,0,127,0,0,127
		};
		
		VertexArray BL6 = new VertexArray(BL6_array.length/3,3,1);
		BL6.set(0,BL6_array.length/3,BL6_array);
		
		//VertexBuffer
		VertexBuffer BL7 = new VertexBuffer();
		float BL7_Bias[] = { -1.675922f, 0.008540f, 1.181742f};
		BL7.setPositions(BL5,0.000113f,BL7_Bias);
		BL7.setNormals(BL6);
		//length of TriangleStrips
		int[] BL8_stripLength ={3,3,4,3,4,3,3,3,3,3,4,4,4,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,3,3,3,3,4,4,4,3,3,4,4,4,4,4,4,4,4,4,4,4};
		
		//IndexBuffer
		int[] BL8_Indices = {
		0,2,1,3,5,4,9,6,8,7,10,12,11,16,13,15,14,17,19,18,20,22,21,23,25,24,26,28,27,29,31,30,35,32,34,33,39,36,38,37,43,40,42,41,44,46,45,47,49,48,50,52,51,53,55,54,56,58,57,59,61,60,65,62,64,63,69,66,68,67,73,70,72,71,77,74,76,75,81,78,80,79,85,82,84,83,89,86,88,87,93,90,92,91,97,94,96,95,98,100,99,101,103,102,104,106,105,107,109,108,113,110,112,111,117,114,116,115,121,118,120,119,122,124,123,125,127,126,131,128,130,129,135,132,134,133,139,136,138,137,143,140,142,141,147,144,146,145,151,148,150,149,155,152,154,153,159,156,158,157,163,160,162,161,167,164,166,165,171,168,170,169};
		
		IndexBuffer BL8=new TriangleStripArray(BL8_Indices,BL8_stripLength);
		
		PolygonMode BL9 = new PolygonMode();
		BL9.setCulling(162);
		BL9.setShading(165);
		BL9.setWinding(168);
		BL9.setTwoSidedLightingEnable(false);
		BL9.setLocalCameraLightingEnable(false);
		BL9.setPerspectiveCorrectionEnable(true);
		
		//Material: 
		Material BL10 = new Material();
		BL10.setColor(Material.AMBIENT,0x00000000);
		BL10.setColor(Material.SPECULAR,0x00000000);
		BL10.setColor(Material.DIFFUSE,0xFFFF3184);
		BL10.setColor(Material.EMISSIVE,0x00000000);
		BL10.setShininess(0.000000f);
		BL10.setVertexColorTrackingEnable(false);
		//Appearance
		Appearance BL11 = new Appearance();
		BL11.setPolygonMode(BL9);
		BL11.setMaterial(BL10);
		
		
		//Mesh:Tank
		Mesh BL12 = new Mesh(BL7,BL8,BL11);
		float[] BL12_matrix = {
			1.0f,0.0f,0.0f,0.0f,
			0.0f,1.0f,0.0f,0.0f,
			0.0f,0.0f,1.0f,0.0f,
			0.0f,0.0f,0.0f,1.0f
		};
		
		Transform BL12_transform = new Transform();
		BL12_transform.set(BL12_matrix);
		BL12.setTransform(BL12_transform);
		
		
		//World:
		World BL13 = new World();
		BL13.addChild(BL4);
		BL13.addChild(BL2);
		BL13.addChild(BL12);
		BL13.setBackground(BL3);
		BL13.setActiveCamera(BL2);
		
	
	return BL13;
}}
